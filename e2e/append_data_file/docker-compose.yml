version: "3"

services:
  trino:
    image: trinodb/trino
    container_name: trino
    user: root
    networks:
      iceberg_net:
    depends_on:
      - iceberg-rest
    ports:
      - 8080:8080
    volumes:
      - ./catalog:/etc/trino/catalog
  iceberg-rest:
    image: tabulario/iceberg-rest
    container_name: iceberg-rest
    user: root
    networks:
      iceberg_net:
    ports:
      - 8181:8181
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://icebergdata/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    networks:
      iceberg_net:
        aliases:
          - testbucket.minio
    ports:
      - 9001:9001
      - 9000:9000
    command: [ "server", "/data", "--console-address", ":9001" ]
  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    networks:
      iceberg_net:
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/icebergdata;
      /usr/bin/mc mb minio/icebergdata;
      /usr/bin/mc policy set public minio/icebergdata;
      tail -f /dev/null
      "
networks:
  iceberg_net:
