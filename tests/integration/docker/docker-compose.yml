version: "3"

services:
  spark:
    image: apache/spark:3.4.1
    container_name: spark
    user: root
    ports:
      - "15002:15002"
    networks:
      iceberg_net:
    environment:
      - SPARK_HOME=/opt/spark
      - PYSPARK_PYTON=/usr/bin/python3.9
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/spark/bin:/opt/spark/sbin
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    volumes:
      - './spark-script:/spark-script'
    command: ["bash", "/spark-script/spark-connect-server.sh"]

  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
      MINIO_DOMAIN: minio
      MINIO_HTTP_TRACE: /dev/stdout
    networks:
      iceberg_net:
        aliases:
          - icebergdata.minio
    ports:
      - "9001:9001"
      - "9000:9000"
    command: [ "server", "/data", "--console-address", ":9001" ]

  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    networks:
      iceberg_net:
    environment:
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: password
      AWS_REGION: us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/icebergdata;
      /usr/bin/mc mb minio/icebergdata;
      /usr/bin/mc policy set public minio/icebergdata;
      tail -f /dev/null
      "
networks:
  iceberg_net:
