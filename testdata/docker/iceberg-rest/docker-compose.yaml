version: '3.8'

services:
  rest:
    image: tabulario/iceberg-rest:0.6.0
    environment:
      - CATALOG_CATOLOG__IMPL=org.apache.iceberg.jdbc.JdbcCatalog
      - CATALOG_URI=jdbc:sqlite:file:/tmp/iceberg_rest_mode=memory
      - CATALOG_WAREHOUSE=s3://icebergdata/demo
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    depends_on:
      - minio
    links:
      - minio:icebergdata.minio
    expose:
      - 8181

  minio:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    expose:
      - 9001
      - 9000
    command: ["server", "/data", "--console-address", ":9001"]

  mc:
    depends_on:
      - minio
    image: minio/mc
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/icebergdata;
      /usr/bin/mc mb minio/icebergdata;
      /usr/bin/mc policy set public minio/icebergdata;
      tail -f /dev/null
      "      
  
  spark:
    depends_on:
      - minio
      - rest
    image: icelake-spark:latest
    environment:
      - SPARK_HOME=/opt/spark
      - PYSPARK_PYTON=/usr/bin/python3.9
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/spark/bin:/opt/spark/sbin
    user: root
    expose:
      - 15002
    healthcheck:
      test: netstat -ltn | grep -c 15002
      interval: 1s
      retries: 1200
    volumes:
      - ../spark-script:/spark-script
    entrypoint: ["/spark-script/spark-connect-server2.sh"]